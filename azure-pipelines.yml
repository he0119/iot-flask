# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
    - master
    - refs/tags/*

variables:
    imageName: 'iot-flask'

jobs:

- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      pip install pytest
      pytest tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'Pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Build'
  dependsOn: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - bash: echo '##vso[task.setvariable variable=imageTag]test'
    condition: eq(variables['Build.Reason'], 'PullRequest')
    displayName: 'Set imageTag to test'

  - bash: echo '##vso[task.setvariable variable=imageTag]latest'
    condition: contains(variables['Build.SourceBranch'], 'master')
    displayName: 'Set imageTag to latest'

  - bash: |
      tag=`echo $(Build.SourceBranch) | grep -P 'v([0-9.]+)' -o`
      echo '##vso[task.setvariable variable=imageTag]'$tag
    condition: contains(variables['Build.SourceBranch'], 'tags')
    displayName: 'Set imageTag to tags'

  - bash: docker build -f Dockerfile -t $(dockerId)/$(imageName):$(imageTag) .
    displayName: 'Docker build'

  - bash: |
      docker login -u $(dockerId) -p $(pswd)
      docker push $(dockerId)/$(imageName):$(imageTag)
    displayName: 'Docker push'

  - bash: |
      echo $(Build.SourceBranch)
      echo $(Build.Reason)
      echo $(imageTag)
    displayName: 'Print some variables'
